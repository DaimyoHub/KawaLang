(lang dune 3.15)
(name kawa)
(version dev)
(sections (lib .) (libexec .) (bin ../../bin) (doc ../../doc/kawa))
(files
 (lib
  (META
   dune-package
   lang/ast.ml
   lang/call.ml
   lang/ctx.ml
   lang/frame.ml
   lang/grammar.ml
   lang/lang.a
   lang/lang.cma
   lang/lang.cmi
   lang/lang.cmt
   lang/lang.cmx
   lang/lang.cmxa
   lang/lang.ml
   lang/lang__Ast.cmi
   lang/lang__Ast.cmt
   lang/lang__Ast.cmx
   lang/lang__Call.cmi
   lang/lang__Call.cmt
   lang/lang__Call.cmx
   lang/lang__Ctx.cmi
   lang/lang__Ctx.cmt
   lang/lang__Ctx.cmx
   lang/lang__Frame.cmi
   lang/lang__Frame.cmt
   lang/lang__Frame.cmx
   lang/lang__Grammar.cmi
   lang/lang__Grammar.cmt
   lang/lang__Grammar.cmx
   lang/lang__Load.cmi
   lang/lang__Load.cmt
   lang/lang__Load.cmx
   lang/lang__Sym.cmi
   lang/lang__Sym.cmt
   lang/lang__Sym.cmx
   lang/lang__Symbol_resolv.cmi
   lang/lang__Symbol_resolv.cmt
   lang/lang__Symbol_resolv.cmx
   lang/lang__Type.cmi
   lang/lang__Type.cmt
   lang/lang__Type.cmx
   lang/lang__Type_check.cmi
   lang/lang__Type_check.cmt
   lang/lang__Type_check.cmx
   lang/lang__Type_error.cmi
   lang/lang__Type_error.cmt
   lang/lang__Type_error.cmx
   lang/load.ml
   lang/sym.ml
   lang/symbol_resolv.ml
   lang/type.ml
   lang/type_check.ml
   lang/type_error.ml
   opam))
 (libexec (lang/lang.cmxs))
 (bin (kawa.interpreter))
 (doc (README.md)))
(library
 (name kawa.lang)
 (kind normal)
 (archives (byte lang/lang.cma) (native lang/lang.cmxa))
 (plugins (byte lang/lang.cma) (native lang/lang.cmxs))
 (native_archives lang/lang.a)
 (main_module_name Lang)
 (modes byte native)
 (modules
  (wrapped
   (group
    (alias
     (obj_name lang)
     (visibility public)
     (kind alias)
     (source (path Lang) (impl (path lang/lang.ml-gen))))
    (name Lang)
    (modules
     (module
      (obj_name lang__Ast)
      (visibility public)
      (source (path Ast) (impl (path lang/ast.ml))))
     (module
      (obj_name lang__Call)
      (visibility public)
      (source (path Call) (impl (path lang/call.ml))))
     (module
      (obj_name lang__Ctx)
      (visibility public)
      (source (path Ctx) (impl (path lang/ctx.ml))))
     (module
      (obj_name lang__Frame)
      (visibility public)
      (source (path Frame) (impl (path lang/frame.ml))))
     (module
      (obj_name lang__Grammar)
      (visibility public)
      (source (path Grammar) (impl (path lang/grammar.ml))))
     (module
      (obj_name lang__Load)
      (visibility public)
      (source (path Load) (impl (path lang/load.ml))))
     (module
      (obj_name lang__Sym)
      (visibility public)
      (source (path Sym) (impl (path lang/sym.ml))))
     (module
      (obj_name lang__Symbol_resolv)
      (visibility public)
      (source (path Symbol_resolv) (impl (path lang/symbol_resolv.ml))))
     (module
      (obj_name lang__Type)
      (visibility public)
      (source (path Type) (impl (path lang/type.ml))))
     (module
      (obj_name lang__Type_check)
      (visibility public)
      (source (path Type_check) (impl (path lang/type_check.ml))))
     (module
      (obj_name lang__Type_error)
      (visibility public)
      (source (path Type_error) (impl (path lang/type_error.ml))))))
   (wrapped true))))
